@import 'bulma/sass/utilities/initial-variables.sass';
@import 'bulma/sass/utilities/functions.sass';

$primary: rgb(175, 49, 95);
$primary-light: rgb(237, 213, 222);
$grey-lighter: #444;

// from some color palette iterations
$green: #58BC82;
$green: #86BA90;
$green-light: #96E6B3;
$green-light2: #8FE388;
$yellow: #FFC857;
$yellow: #E59500;
$yellow: #F5F3BB;
$yellow: #F2E94E;
$yellow: #F4AC45;
$orange: #DFA06E;
$brown: #412722;
$green-light3: #35FF69;
$violet-dark: #412234;
$violet: #521945;
$violet2: #4A2545;
$violet-grey: #7E6B8F;
$purple: #4E0250;
$purple-grey: #645986;
$blue: #8DA7BE;
$blue2: #0075A2;
$blue-light: #A3D9FF;
$blue-dark: #242F40;
$blue-oxford: #002642;
$cobalt: #1E3888;
$grey-dark: #363636;
$teal-light: #75DDDD;
$teal-dark: #508991;
$red: #FF3E41;

// Round status colors
$invalid: $grey-dark;
$invalid-invert: findColorInvert($invalid);
$scheduled: $blue;
$scheduled-invert: findColorInvert($scheduled);
$open: $teal-dark;
$open-invert: findColorInvert($open);
$closed: $yellow;
$closed-invert: findColorInvert($closed);
$ended: $purple-grey;
$ended-invert: findColorInvert($ended);
$cancelled: $red;
$cancelled-invert: findColorInvert($cancelled);
$timeout: $grey-light;
$timeout-invert: findColorInvert($timeout);

@import 'bulma/sass/utilities/derived-variables.sass';
$addColors: (
  "invalid": ($invalid, $invalid-invert),
  "scheduled": ($scheduled, $scheduled-invert),
  "open": ($open, $open-invert),
  "closed": ($closed, $closed-invert),
  "ended": ($ended, $ended-invert),
  "cancelled": ($cancelled, $cancelled-invert),
  "timeout": ($timeout, $timeout-invert)
);
$colors: map-merge($colors, $addColors);


$text: $grey-dark;
$link: rgb(175, 49, 95);
$link-hover: rgb(196, 56, 107);

$gap: 16px;
$tablet: 500px;
$desktop: 500px;
$widescreen-enabled: false;
$fullhd-enabled: false;
$widescreen: 500px;
$fullhd: 500px;

$font-text: 'Roboto';
$font-primary: 'KarmaticArcade';
$font-monospace: 'Inconsolata';


@import 'bulma/bulma.sass';
/*@import 'bulma-checkradio/dist/css/bulma-checkradio.sass';*/


body {
	max-width: 500px;
	margin: 0px auto;
	font-family: $font-text, sans-serif;
}

button {
	font-weight: 300;
	font-family: $font-primary, sans-serif;
	letter-spacing: 5px;
}

.field-label {
    flex-basis: 70px;
}

.no-entries {
    margin: 50px 0px;
}

.headline {
    margin-top: 50px;
}

/*
    Vertically center all children:
    Does not horizontally center
*/
.is-vertical-center {
    display: flex;
    align-items: center;
}

/* 
    Vertically aligned items:
    By default stacked at top until element
    with `.vertical-top-last` occurs  
*/
.is-vertical {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.is-vertical-top-last {
    flex-grow: 1;
}

/* 
    Vertically evenly aligned items:
    Direct children are distributen evenly
    across the vertical axis
*/
.is-vertical-even {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.is-vertical-even > * {
    flex: 1;
}

.is-large {
    font-size: 1.5rem;
}

.is-relative {
    position: relative;
}

.is-absolute {
    position: absolute;
}

.is-monospace {
    font-family: $font-monospace, monospace;
}

.is-thin {
    font-weight: 100;
}

.is-light {
    font-weight: 300;
}

.is-regular {
    font-weight: 400;
}

.is-semi-bold {
    font-weight: 500;
}

.is-bold {
    font-weight: 700;
}

.is-heavy-bold {
    font-weight: 900;
}

.is-striked-through {
    text-decoration: line-through;
}

.has-font-primary {
    font-family: $font-primary, sans-serif;
}

.has-color-text {
    color: $text;
}

span {
    &.is-loading {
        position: relative;
        pointer-events: none; // == disable
        opacity: 0.5;
        &:after {
            @include loader;
            position: absolute;
            top: calc(50% - 0.3em);
            left: calc(50% + 0.3em);
            width: $size-large;
            height: $size-large;
            border-width: 0.1em;
        }
    }
}

.dismiss-spinner {
    position: relative;
    pointer-events: none; // == disable
    opacity: 0.5;
    &:after {
        @include loader;
        position: absolute;
        top: calc(50% - 0.55em);
        left: calc(50% + 0em);
        width: $size-medium;
        height: $size-medium;
        border-width: 0.1em;
    }
}

@import './components/sections/Header.scss';